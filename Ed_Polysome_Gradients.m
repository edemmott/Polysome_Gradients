%% Polysome gradient analysis.
% Script for analysis of Gradient profiler text files produced using a Biocomp gradient profiler. 
% Written by Ed Emmott, Northeastern University, Boston, MA (2017).
% Some sections shamelessly 'borrowed' from Nikolai Slavov.
clear; clc
%% FILES TO USE - MODIFY AS APPROPRIATE
fileOfInterest = {'2017_12_19_Ed_THP-1MCP_s01.csv' '2017_12_19_Ed_THP-1MCP_s02.csv'};
% modify as as appropriate. Multiplefiles use the format {'file1.csv' 'file2.csv' 'etc'}. If multiple files
% are listed they will still output the individual figure and tables but in 
% addition a combined plot minus fraction details and plus a figure legend
% will be used and a single file with the header details will be generated.

%% ANALYSIS OPTION TOGGLES - MODIFY AS APPROPRIATE
includeFracLines = 1    % Whether to mark fraction names/lines on plot. 1 True 0 False.
includeFracConc = 0     % Includes fraction concentrations on plot. Note, only active if includeFracLines is also true. 1 True 0 False.
makepdf = 1             % Whether to generate pdf files. 1 True 0 False.
addExpDates = 0         % Begin output file names with experiment dates taken from file headers. 1 True 0 False. 
subtractBase = 0        % Whether to subtract base absorbance (defined as min absorbance *0.85). 1 True 0 False.
% Note: base is not subtracted when calculating fraction concentrations,
% this goes off the straight absorbance.
%% ------!!!YOU SHOULDN'T NEED TO TOUCH ANYTHING BELOW THIS POINT!!!-------
%--------------------------------------------------------------------------
%--------------------(If you do bad things may happen)---------------------
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------

[~,numberOfFiles] = size(fileOfInterest) 

for i = 1:numberOfFiles %i is used for 
%% Data Import
dataTable1 = readtable(fileOfInterest{i},'headerlines',32);
shortFileName = fileOfInterest{i}(1:end-4);

%stores all plots in a single structure 'multiTable' for access if doing multiple plots.
multiTable.(['run_',num2str(i)]) = dataTable1(:,2);
%multiT = struct2cell(multiTable);

%% Header Import - header details for each file are imported separately.
delimiter = ';';
endRow = 28;
% Format for each line of text: - this sectionmodified from a matlab
% autogenerated section. Column1: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%*s%*s%[^\n\r]';

% Open the text file.
fileID = fopen(fileOfInterest{i},'r');
dataArray = textscan(fileID, formatSpec, endRow, 'Delimiter', delimiter, 'TextType', 'string', 'ReturnOnError', false, 'EndOfLine', '\r\n');
fclose(fileID);

% Create output variable
headerVarNames = {['File_',num2str(i)]};
headerTable = table(dataArray{1:end-1}, 'VariableNames',headerVarNames);
%cleanup
clearvars delimiter endRow formatSpec fileID dataArray ans;
% grab experiment date from the header information in the file (line 3).
expDate = headerTable{3,1}; expDate = extractAfter(expDate,6);
outputHeaderTable(:,i) = headerTable;
outputHeaderTable.Properties.VariableNames(i) = headerVarNames;

%% Processing/plotting
% this section extracts fraction data from 'dataTable1'.
fractions = dataTable1; idx = any(ismissing(fractions),3); fractions(idx(:,3),:) = [];
fractions(end,:) = []; plotFractions = fractions{:,1}; 

% this section takes the aborbance data and uses it to set base and Ylim
% variables to put the plot on an appropriate y axis scale.
Absorbance  = dataTable1.Absorbance;
Absorbance2 = dataTable1.Absorbance(300:end-200);
base = min( Absorbance2 ) * 0.85;
    if subtractBase == 1
        Ylim = (max( Absorbance2 )-base) * 1.05;
    else
        Ylim = (max( Absorbance2 )) * 1.05;
    end
    
% This section declares fracs and Tlim variables for adding fraction names
% and volumes to appropriate positions on the plot.
fracs = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' 'A2' 'B2' 'C2' 'D2' 'E2' 'F2' 'G2' 'H2' 'I2' 'J2' 'K2' 'L2' 'M2' 'N2' 'O2' 'P2' 'Q2' 'R2' 'S2' 'T2' 'U2' 'V2' 'W2' 'X2' 'Y2' 'Z2'};
        [numFracs,~] = size(plotFractions);
        Tlim = 0.975*Ylim; % places fraction name text at the top of the plot, to place at bottom change to 0.025.
        Tlim2 = 0.875*Ylim; % places fraction concentration just below fraction name.
        Tlim3 = 0.925*Ylim;
        
% Section 1: works out mean RNA concentration per fraction.
fracVolTable = fractions(:,[3 4]);
fracVolTable(1:numFracs,1) = fracs(1:numFracs)';

% Converts the table to a cell array suitable for the uitable function.
printFracAnaTable = table2cell(fracVolTable);

ind = find( ~cellfun( @isempty, dataTable1.FractionNumber ) ); % this is possibly redundant as I have a separate bit to grab this.
ind = [1; ind];

for k=2:numel( ind ) - 1
        Mean_Absorbance = mean( dataTable1.Absorbance( ind(k-1):ind(k) ) );
        rna_prot_conc = round(Mean_Absorbance*40,2); % the concentration of RNA in a sample in ug is 40* the A260. So an A260 of 1 = 40ug.
        printFracAnaTable(k-1,3) = {rna_prot_conc};
end

fracConc = printFracAnaTable(:,3);

% plotting the figure.
f = figure;
                if subtractBase == 1 % controls the subtract base toggle
                    plot( dataTable1.Distance_mm_, dataTable1.Absorbance -base, 'r', 'linewidth', 2.5 ); hold on
                else
                    plot( dataTable1.Distance_mm_, dataTable1.Absorbance, 'r', 'linewidth', 2.5 ); hold on
                end
                    % Add fraction lines and labels
    if includeFracLines == 1   % controls the include fraction lines toggle.
        plot([plotFractions plotFractions], [0; Ylim], 'k:' )
        %fraction names under 'fracs'. Note this WILL error if goes past
        %Z2 so >52 fractions. If necessary add e.g. A3 etc to fracs below.
        
        for j = 1:numFracs - 1 % this loop adds each fraction to the graph.
            text(plotFractions(j),Tlim,fracs(j))
                if includeFracConc == 1 % controls the option to display fraction concentrations on the plot
                        if ~mod(j/2,1) == 1 % this loop makes odd fractions display frac volumes at an offset to avoid overlap
                        text(plotFractions(j),Tlim2,fracConc(j))
                        else
                        text(plotFractions(j),Tlim3,fracConc(j))
                        end
                end
                
        end
    end
    
% Sets X and Y axis
xlim([0 78]);
ylim([0 Ylim]);

% Label axis and add title.
h(1) = xlabel('Distance along the sucrose gradient, mm');
h(2) = ylabel('Absorbance at 254 nm');
h(3) = title(regexprep(fileOfInterest{i}, '_', ' ')); 
set(h,'FontSize',16) 
hold off

%% PDF export - the plot!
if makepdf == 1
    if addExpDates == 1
        saveas(gcf,strcat(expDate,'_',shortFileName,'_plot','.pdf'))
    else
        saveas(gcf,strcat(shortFileName,'_plot2','.pdf'))
    end
end

%% Generate figure of fraction details

f2 = figure;
t = uitable(f2);
t.Data = printFracAnaTable;
t.ColumnName = {'Fraction' 'Volume_ml' 'RNA_conc_ug'};
txt_title = uicontrol('Style', 'text', 'Position', [100 330 200 40], 'String', regexprep( fileOfInterest{i}, '_', ' '));


%% PDF export - analysis table - generates a pdf of the run fractions generated in previous section.
    if makepdf == 1
        if addExpDates == 1
            saveas(gcf,strcat(expDate,'_',shortFileName,'_analysis','.pdf'))
        else
            saveas(gcf,strcat(shortFileName,'_analysis2','.pdf'))
        end
    end
end
%% Write header table output
if numberOfFiles == 1
    if addExpDates == 1
        writetable(outputHeaderTable,strcat(expDate,'_',shortFileName,'_Headers','.csv'))
    else
        writetable(outputHeaderTable,strcat(shortFileName,'_Headers.csv'))
    end
else
    % Note this file title will add the date of the last file in the file list
    % (fileOfInterest).
    writetable(outputHeaderTable,strcat(expDate,'_Combined_Analysis_Headers2.csv'))
end

%% MULTIPLE FILE ALIGNMENT AND PLOTTING SECTION  
%Todo: Want to make this script so it can cycle through multiple files and plot together. 
% Note, whilst the make pdf toggle is still active, no fraction lines or
% concentrations are included on merged plots.

if numberOfFiles > 1 % controls whether the multiple file alignment/plotting section is active.
    
% Part 1: Import all files under separate names
% Handled above - all runs are placed in 'Run_(i)' fields of the multiTable
% struct

% Part 2: Align all files


% Part 3: Plot

% Part 4: Make pdf.
    if makepdf == 1
        saveas(gcf,strcat(expDate,'_','Combined_analysis','.pdf'))
    end
end
   